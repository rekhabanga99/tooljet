"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const execa = require('execa');
const path = require('path');
const fs = require('fs');
class Install extends core_1.Command {
    async run() {
        const { args, flags } = await this.parse(Install);
        const plugin = flags.plugin;
        const pluginPath = path.join('plugins', 'packages', `${plugin}`);
        if (!fs.existsSync(pluginPath)) {
            this.log('\x1b[41m%s\x1b[0m', 'Error : Plugin not found, make sure that you are running this command in Tooljet directory');
            process.exit(1);
        }
        core_1.CliUx.ux.action.start('adding npm module');
        await execa('npm', ['i', `${args.npm_module}`], { cwd: pluginPath });
        core_1.CliUx.ux.action.stop();
        this.log('\x1b[42m', '\x1b[30m', `Package: ${args.npm_module} added to ${plugin}`, '\x1b[0m');
    }
}
exports.default = Install;
Install.flags = {
    plugin: core_1.Flags.string({ required: true }),
};
Install.description = 'Installs a new npm module inside a tooljet plugin';
Install.examples = [`$ tooljet plugin install <npm_module> --plugin <plugin_name>`];
Install.args = [{ name: 'npm_module', description: 'Name of the npm module', required: true }];
