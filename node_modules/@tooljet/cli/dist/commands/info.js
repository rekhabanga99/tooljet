"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfoCommand = void 0;
const core_1 = require("@oclif/core");
const chalk = require("chalk");
const os = require("os");
const childProcess = require("child_process");
function getPackageVersion() {
    try {
        return require(`./package.json`).version;
    }
    catch {
        return 'N/A';
    }
}
function getBinaryVersion(binaryName) {
    try {
        return childProcess.execSync(`${binaryName} --version`).toString().trim();
    }
    catch {
        return 'N/A';
    }
}
class InfoCommand extends core_1.Command {
    async run() {
        console.log(`
    Operating System:
      platform: ${chalk.green(os.platform())}
      arch: ${chalk.green(os.arch())}
      version: ${chalk.green(os.version())}
    Binaries:
      node: ${chalk.green(process.versions.node)}
      npm: ${chalk.green(getBinaryVersion('npm'))}
    Relevant packages:
      tooljet: ${chalk.green(getPackageVersion())}
    `);
    }
}
exports.InfoCommand = InfoCommand;
InfoCommand.description = 'This command returns the information about where tooljet is being run';
